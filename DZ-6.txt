1. Настроить и запустить master-сервер.

mysql> SHOW MASTER STATUS;
+------------+----------+--------------+------------------+-------------------+
| File       | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+------------+----------+--------------+------------------+-------------------+
| bin.000023 |      538 | sotrudniki   |                  |                   |
+------------+----------+--------------+------------------+-------------------+
1 row in set (0,00 sec)



mysql> SHOW SLAVE STATUS \G
*************************** 1. row ***************************
               Slave_IO_State: Waiting for master to send event
                  Master_Host: 192.168.1.51
                  Master_User: root
                  Master_Port: 3306
                Connect_Retry: 60
              Master_Log_File: bin.000023
          Read_Master_Log_Pos: 538
               Relay_Log_File: MySQL8-relay-bin.000002
                Relay_Log_Pos: 196
        Relay_Master_Log_File: bin.000023
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
              Replicate_Do_DB: 
          Replicate_Ignore_DB: 
           Replicate_Do_Table: 
       Replicate_Ignore_Table: 
      Replicate_Wild_Do_Table: 
  Replicate_Wild_Ignore_Table: 
                   Last_Errno: 0
                   Last_Error: 
                 Skip_Counter: 0
          Exec_Master_Log_Pos: 538
              Relay_Log_Space: 405
              Until_Condition: None
               Until_Log_File: 
                Until_Log_Pos: 0
           Master_SSL_Allowed: No
           Master_SSL_CA_File: 
           Master_SSL_CA_Path: 
              Master_SSL_Cert: 
            Master_SSL_Cipher: 
               Master_SSL_Key: 
        Seconds_Behind_Master: 0
Master_SSL_Verify_Server_Cert: No
                Last_IO_Errno: 0
                Last_IO_Error: 
               Last_SQL_Errno: 0
               Last_SQL_Error: 
  Replicate_Ignore_Server_Ids: 
             Master_Server_Id: 1
                  Master_UUID: 3a90a3b6-f1ab-11e8-8365-080027ad0e39
             Master_Info_File: mysql.slave_master_info
                    SQL_Delay: 0
          SQL_Remaining_Delay: NULL
      Slave_SQL_Running_State: Slave has read all relay log; waiting for more updates
           Master_Retry_Count: 86400
                  Master_Bind: 
      Last_IO_Error_Timestamp: 
     Last_SQL_Error_Timestamp: 
               Master_SSL_Crl: 
           Master_SSL_Crlpath: 
           Retrieved_Gtid_Set: 
            Executed_Gtid_Set: 
                Auto_Position: 0
         Replicate_Rewrite_DB: 
                 Channel_Name: 
           Master_TLS_Version: 
       Master_public_key_path: 
        Get_master_public_key: 0
1 row in set (0,00 sec)




2. Установить MongoDB и повторить запросы из методички.
Я создал базу данных города, как в первом уроке. И сделал к ней несколько запросов.

use city_and_country

> show dbs
admin     0.000GB
config    0.000GB
july      0.000GB
local     0.000GB
testtest  0.000GB


> db.city_and_country.insert({"country":"Россия", "area":"Челябинская","city":"Челябинск"})
WriteResult({ "nInserted" : 1 })
> db.city_and_country.insert({"country":"Россия", "area":"Челябинская","city":"Аша"})
WriteResult({ "nInserted" : 1 })
> db.city_and_country.insert({"country":"Россия", "area":"Челябинская","city":"Копейск"})
WriteResult({ "nInserted" : 1 })
> db.city_and_country.insert({"country":"Россия", "area":"Оренбургская","city":"Оренбург"})
WriteResult({ "nInserted" : 1 })
> db.city_and_country.insert({"country":"Россия", "area":"Оренбургская","city":"Орск"})
WriteResult({ "nInserted" : 1 })
> db.city_and_country.insert({"country":"Россия", "area":"Оренбургская","city":"Сольилецк"})
WriteResult({ "nInserted" : 1 })
> db.city_and_country.insert({"country":"Казахстан", "area":"Актюбинская","city":"Алга"})
WriteResult({ "nInserted" : 1 })
> db.city_and_country.insert({"country":"Казахстан", "area":"Актюбинская","city":"Кобда"})
WriteResult({ "nInserted" : 1 })
> db.city_and_country.insert({"country":"Казахстан", "area":"Актюбинская","city":"Шалкар"})
WriteResult({ "nInserted" : 1 })
> db.city_and_country.insert({"country":"Казахстан", "area":"Павлодарска","city":"Павлодар"})
WriteResult({ "nInserted" : 1 })
> db.city_and_country.insert({"country":"Казахстан", "area":"Павлодарска","city":"Иртышск"})
WriteResult({ "nInserted" : 1 })
> db.city_and_country.insert({"country":"Казахстан", "area":"Павлодарска","city":"Баянаул"})
WriteResult({ "nInserted" : 1 })

> db.city_and_country.find().pretty()
{
  "_id" : ObjectId("5d33603f7e6443901e49d555"),
  "country" : "Россия",
  "area" : "Челябинская",
  "city" : "Челябинск"
}
{
  "_id" : ObjectId("5d33604a7e6443901e49d556"),
  "country" : "Россия",
  "area" : "Челябинская",
  "city" : "Аша"
}
{
  "_id" : ObjectId("5d3360687e6443901e49d557"),
  "country" : "Россия",
  "area" : "Челябинская",
  "city" : "Копейск"
}
{
  "_id" : ObjectId("5d3360837e6443901e49d558"),
  "country" : "Россия",
  "area" : "Оренбургская",
  "city" : "Оренбург"
}
{
  "_id" : ObjectId("5d33608a7e6443901e49d559"),
  "country" : "Россия",
  "area" : "Оренбургская",
  "city" : "Орск"
}
{
  "_id" : ObjectId("5d3360977e6443901e49d55a"),
  "country" : "Россия",
  "area" : "Оренбургская",
  "city" : "Сольилецк"
}
{
  "_id" : ObjectId("5d3360f17e6443901e49d55b"),
  "country" : "Казахстан",
  "area" : "Актюбинская",
  "city" : "Алга"
}
{
  "_id" : ObjectId("5d3360f77e6443901e49d55c"),
  "country" : "Казахстан",
  "area" : "Актюбинская",
  "city" : "Кобда"
}
{
  "_id" : ObjectId("5d3360fe7e6443901e49d55d"),
  "country" : "Казахстан",
  "area" : "Актюбинская",
  "city" : "Шалкар"
}
{
  "_id" : ObjectId("5d33611d7e6443901e49d55e"),
  "country" : "Казахстан",
  "area" : "Павлодарска",
  "city" : "Павлодар"
}
{
  "_id" : ObjectId("5d33614c7e6443901e49d55f"),
  "country" : "Казахстан",
  "area" : "Павлодарска",
  "city" : "Иртышск"
}
{
  "_id" : ObjectId("5d33615a7e6443901e49d560"),
  "country" : "Казахстан",
  "area" : "Павлодарска",
  "city" : "Баянаул"
}


> db.city_and_country.find({$and: [{"country":{$regex:"^Рос"}}, {"area":{$regex:"Орен"}}]}).pretty()
{
  "_id" : ObjectId("5d3360837e6443901e49d558"),
  "country" : "Россия",
  "area" : "Оренбургская",
  "city" : "Оренбург"
}
{
  "_id" : ObjectId("5d33608a7e6443901e49d559"),
  "country" : "Россия",
  "area" : "Оренбургская",
  "city" : "Орск"
}
{
  "_id" : ObjectId("5d3360977e6443901e49d55a"),
  "country" : "Россия",
  "area" : "Оренбургская",
  "city" : "Сольилецк"
}
> 

> db.city_and_country.update({"_id" : ObjectId("5d3360977e6443901e49d55a")}, {$set:{"country":"RUS"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

> db.city_and_country.find({"_id" : ObjectId("5d3360977e6443901e49d55a")}).pretty()
{
  "_id" : ObjectId("5d3360977e6443901e49d55a"),
  "country" : "RUS",
  "area" : "Оренбургская",
  "city" : "Сольилецк"
}

> db.city_and_country.remove({"_id" : ObjectId("5d3360977e6443901e49d55a")})
WriteResult({ "nRemoved" : 1 })


> db.city_and_country.find().count()
11
> db.city_and_country.remove({"_id" : ObjectId("5d33615a7e6443901e49d560")})
WriteResult({ "nRemoved" : 1 })
> db.city_and_country.find().count()
10

> db.city_and_country.drop()
true
> show dbs
admin     0.000GB
config    0.000GB
july      0.000GB
local     0.000GB
testtest  0.000GB
